/*
 * This file was automatically generated by EvoSuite
 * Tue May 30 13:23:38 CEST 2017
 */

package Actions;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.fail;

import java.util.ArrayList;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import Components.Card;
import Components.Floor;
import Components.Relative;
import Components.Tower;
import Effects.GainHarvestValue;
import Effects.GainVictoryPointForCharacterCard;
import it.polimi.ingsw.GC_40.ColorDice;
import it.polimi.ingsw.GC_40.ColorPlayer;
import it.polimi.ingsw.GC_40.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class PutRelativeOnTower_ESTest extends PutRelativeOnTower_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      ArrayList<Floor> arrayList1 = new ArrayList<Floor>();
      Tower tower0 = new Tower("", arrayList0, arrayList0, arrayList0, arrayList1);
      GainVictoryPointForCharacterCard gainVictoryPointForCharacterCard0 = new GainVictoryPointForCharacterCard(0);
      Floor floor0 = new Floor("", (-1), gainVictoryPointForCharacterCard0);
      arrayList1.add(floor0);
      ColorDice colorDice0 = ColorDice.WHITE;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower((Player) null, tower0, 0, relative0);
      // Undeclared exception!
      try { 
        putRelativeOnTower0.isApplicable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Components.Tower", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorPlayer colorPlayer0 = ColorPlayer.BLUE;
      Player player0 = new Player(colorPlayer0);
      ArrayList<Floor> arrayList0 = new ArrayList<Floor>();
      Tower tower0 = new Tower("", (ArrayList<Card>) null, (ArrayList<Card>) null, (ArrayList<Card>) null, arrayList0);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower(player0, tower0, 0, (Relative) null);
      // Undeclared exception!
      try { 
        putRelativeOnTower0.isApplicable();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorPlayer colorPlayer0 = ColorPlayer.YELLOW;
      Player player0 = new Player(colorPlayer0);
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      ArrayList<Floor> arrayList1 = new ArrayList<Floor>();
      Tower tower0 = new Tower("", arrayList0, arrayList0, arrayList0, arrayList1);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower(player0, tower0, (-1), (Relative) null);
      // Undeclared exception!
      try { 
        putRelativeOnTower0.isApplicable();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorPlayer colorPlayer0 = ColorPlayer.GREEN;
      Player player0 = new Player(colorPlayer0);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower(player0, (Tower) null, 0, (Relative) null);
      // Undeclared exception!
      try { 
        putRelativeOnTower0.apply();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Actions.PutRelativeOnTower", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorPlayer colorPlayer0 = ColorPlayer.GREEN;
      Player player0 = new Player(colorPlayer0);
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      ArrayList<Floor> arrayList1 = new ArrayList<Floor>();
      Tower tower0 = new Tower((String) null, arrayList0, arrayList0, arrayList0, arrayList1);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower(player0, tower0, 0, (Relative) null);
      // Undeclared exception!
      try { 
        putRelativeOnTower0.apply();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorPlayer colorPlayer0 = ColorPlayer.RED;
      Player player0 = new Player(colorPlayer0);
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      ArrayList<Floor> arrayList1 = new ArrayList<Floor>();
      Tower tower0 = new Tower("", arrayList0, arrayList0, arrayList0, arrayList1);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower(player0, tower0, (-1), (Relative) null);
      // Undeclared exception!
      try { 
        putRelativeOnTower0.apply();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorPlayer colorPlayer0 = ColorPlayer.GREEN;
      Player player0 = new Player(colorPlayer0);
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      ArrayList<Floor> arrayList1 = new ArrayList<Floor>();
      Tower tower0 = new Tower("", (ArrayList<Card>) null, (ArrayList<Card>) null, arrayList0, arrayList1);
      GainHarvestValue gainHarvestValue0 = new GainHarvestValue(0);
      Floor floor0 = new Floor("", 0, gainHarvestValue0);
      floor0.setPlayer(player0);
      arrayList1.add(floor0);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower(player0, tower0, 0, (Relative) null);
      putRelativeOnTower0.apply();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      ArrayList<Floor> arrayList1 = new ArrayList<Floor>();
      Tower tower0 = new Tower("", arrayList0, arrayList0, arrayList0, arrayList1);
      GainVictoryPointForCharacterCard gainVictoryPointForCharacterCard0 = new GainVictoryPointForCharacterCard(0);
      Floor floor0 = new Floor("", 1, gainVictoryPointForCharacterCard0);
      arrayList1.add(floor0);
      ColorDice colorDice0 = ColorDice.BLACK;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower((Player) null, tower0, 0, relative0);
      boolean boolean0 = putRelativeOnTower0.isApplicable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      ArrayList<Floor> arrayList1 = new ArrayList<Floor>();
      Tower tower0 = new Tower("", arrayList0, arrayList0, arrayList0, arrayList1);
      GainVictoryPointForCharacterCard gainVictoryPointForCharacterCard0 = new GainVictoryPointForCharacterCard(0);
      Floor floor0 = new Floor("", 0, gainVictoryPointForCharacterCard0);
      arrayList1.add(floor0);
      ColorDice colorDice0 = ColorDice.WHITE;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower((Player) null, tower0, 0, relative0);
      // Undeclared exception!
      try { 
        putRelativeOnTower0.isApplicable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Components.Tower", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ArrayList<Card> arrayList0 = new ArrayList<Card>();
      ArrayList<Floor> arrayList1 = new ArrayList<Floor>();
      Tower tower0 = new Tower("", arrayList0, arrayList0, arrayList0, arrayList1);
      GainVictoryPointForCharacterCard gainVictoryPointForCharacterCard0 = new GainVictoryPointForCharacterCard(0);
      Floor floor0 = new Floor("", 0, gainVictoryPointForCharacterCard0);
      floor0.setPlayer((Player) null);
      arrayList1.add(floor0);
      ColorDice colorDice0 = ColorDice.WHITE;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower((Player) null, tower0, 0, relative0);
      boolean boolean0 = putRelativeOnTower0.isApplicable();
      assertFalse(boolean0);
  }
}
