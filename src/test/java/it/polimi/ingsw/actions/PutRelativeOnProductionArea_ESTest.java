/*
 * This file was automatically generated by EvoSuite
 * Tue May 30 13:40:31 CEST 2017
 */

package it.polimi.ingsw.actions;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import it.polimi.ingsw.components.*;
import it.polimi.ingsw.areas.*;
import it.polimi.ingsw.colors.*;
import it.polimi.ingsw.GC_40.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class PutRelativeOnProductionArea_ESTest extends PutRelativeOnProductionArea_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColorDice colorDice0 = ColorDice.ORANGE;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnProductionArea putRelativeOnProductionArea0 = new PutRelativeOnProductionArea((Player) null, relative0);
      relative0.setValue(1);
      HarvestAndProductionArea harvestAndProductionArea0 = new HarvestAndProductionArea();
      putRelativeOnProductionArea0.productionArea = harvestAndProductionArea0;
      // Undeclared exception!
      try { 
        putRelativeOnProductionArea0.apply();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Effects.GainProductionValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorDice colorDice0 = ColorDice.BLACK;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnProductionArea putRelativeOnProductionArea0 = new PutRelativeOnProductionArea((Player) null, relative0);
      HarvestAndProductionArea harvestAndProductionArea0 = new HarvestAndProductionArea();
      putRelativeOnProductionArea0.productionArea = harvestAndProductionArea0;
      // Undeclared exception!
      try { 
        putRelativeOnProductionArea0.apply();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Effects.GainProductionValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorPlayer colorPlayer0 = ColorPlayer.YELLOW;
      Player player0 = new Player(colorPlayer0);
      PutRelativeOnProductionArea putRelativeOnProductionArea0 = new PutRelativeOnProductionArea(player0, (Relative) null);
      // Undeclared exception!
      try { 
        putRelativeOnProductionArea0.isApplicable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Actions.PutRelativeOnProductionArea", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorDice colorDice0 = ColorDice.WHITE;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnProductionArea putRelativeOnProductionArea0 = new PutRelativeOnProductionArea((Player) null, relative0);
      HarvestAndProductionArea harvestAndProductionArea0 = new HarvestAndProductionArea();
      ColorPlayer colorPlayer0 = ColorPlayer.GREEN;
      Player player0 = new Player(colorPlayer0);
      harvestAndProductionArea0.setLeftPlayer(player0);
      putRelativeOnProductionArea0.productionArea = harvestAndProductionArea0;
      // Undeclared exception!
      try { 
        putRelativeOnProductionArea0.apply();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Effects.GainProductionValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorDice colorDice0 = ColorDice.ORANGE;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnProductionArea putRelativeOnProductionArea0 = new PutRelativeOnProductionArea((Player) null, relative0);
      HarvestAndProductionArea harvestAndProductionArea0 = new HarvestAndProductionArea();
      relative0.setValue((-1));
      putRelativeOnProductionArea0.productionArea = harvestAndProductionArea0;
      putRelativeOnProductionArea0.apply();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorDice colorDice0 = ColorDice.ORANGE;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnProductionArea putRelativeOnProductionArea0 = new PutRelativeOnProductionArea((Player) null, relative0);
      HarvestAndProductionArea harvestAndProductionArea0 = new HarvestAndProductionArea();
      putRelativeOnProductionArea0.productionArea = harvestAndProductionArea0;
      boolean boolean0 = putRelativeOnProductionArea0.isApplicable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorDice colorDice0 = ColorDice.ORANGE;
      Relative relative0 = new Relative(colorDice0);
      PutRelativeOnProductionArea putRelativeOnProductionArea0 = new PutRelativeOnProductionArea((Player) null, relative0);
      HarvestAndProductionArea harvestAndProductionArea0 = new HarvestAndProductionArea();
      relative0.setValue((-1));
      putRelativeOnProductionArea0.productionArea = harvestAndProductionArea0;
      boolean boolean0 = putRelativeOnProductionArea0.isApplicable();
      assertFalse(boolean0);
  }
}
