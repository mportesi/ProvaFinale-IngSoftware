/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 08 08:26:50 CEST 2017
 */

package it.polimi.ingsw.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import it.polimi.ingsw.GC_40.Player;
import it.polimi.ingsw.actions.PutRelativeOnHarvestArea;
import it.polimi.ingsw.actions.PutRelativeOnMarket;
import it.polimi.ingsw.actions.PutRelativeOnProductionArea;
import it.polimi.ingsw.actions.PutRelativeOnTower;
import it.polimi.ingsw.areas.Floor;
import it.polimi.ingsw.areas.MarketBuilding;
import it.polimi.ingsw.areas.Tower;
import it.polimi.ingsw.cards.Card;
import it.polimi.ingsw.components.Relative;
import java.util.ArrayList;
import java.util.Map;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class PutRelative_ESTest extends PutRelative_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UUID uUID0 = new UUID(0L, 0L);
      Player player0 = new Player(uUID0);
      PutRelativeOnProductionArea putRelativeOnProductionArea0 = new PutRelativeOnProductionArea(player0, (Relative) null, "");
      boolean boolean0 = putRelativeOnProductionArea0.isApplicable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Player player0 = new Player();
      PutRelativeOnHarvestArea putRelativeOnHarvestArea0 = new PutRelativeOnHarvestArea(player0, (Relative) null, "");
      putRelativeOnHarvestArea0.apply(null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Player player0 = new Player();
      MarketBuilding marketBuilding0 = new MarketBuilding("", (Map<String, Integer>) null, 0);
      PutRelativeOnMarket putRelativeOnMarket0 = new PutRelativeOnMarket(player0, (Relative) null, marketBuilding0);
      // Undeclared exception!
      try { 
        putRelativeOnMarket0.isApplicable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.polimi.ingsw.actions.PutRelativeOnMarket", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UUID uUID0 = UUID.randomUUID();
      Player player0 = new Player(uUID0);
      ArrayList<Floor> arrayList0 = new ArrayList<Floor>();
      Tower tower0 = new Tower("", (ArrayList<Card>) null, (ArrayList<Card>) null, (ArrayList<Card>) null, arrayList0);
      PutRelativeOnTower putRelativeOnTower0 = new PutRelativeOnTower(player0, tower0, 0, (Relative) null);
      // Undeclared exception!
      try { 
        putRelativeOnTower0.isApplicable();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Player player0 = new Player();
      PutRelativeOnHarvestArea putRelativeOnHarvestArea0 = new PutRelativeOnHarvestArea(player0, (Relative) null, (String) null);
      // Undeclared exception!
      try { 
        putRelativeOnHarvestArea0.apply(null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("it.polimi.ingsw.actions.PutRelativeOnHarvestArea", e);
      }
  }
}
